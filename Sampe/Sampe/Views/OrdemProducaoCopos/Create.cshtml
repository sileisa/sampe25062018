@model Sampe.Models.OrdemProducaoCopo

@{
	ViewBag.Title = "Create";
	var cores = ViewBag.Cores;
}
<script>
	$(document).ready(function () {
		$("#add").click(function () {
			$("#esp").append('<tr id="novo"><td><select class="form-control" id="CorId" name="CorId">@foreach (var x in cores){<option value="@x.CorId">@x.NomeCor</option>}</select></td><td>@Html.EditorFor(model => model.EspecificacaoCopo.UniProd, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.EspecificacaoCopo.LoteMaster, new { htmlAttributes = new { @class = "form-control" } })</td><td><a class="btn btn-default btn-sm" id="remove"><span class="glyphicon glyphicon-remove"></span></a></td></tr>')
		});

		$("#esp").on('click ', '#remove', function () {
			$("#novo").remove();
		});

		$("#adc").click(function () {
			$("#pausa").append('<tr id="linhaPausa"><td>@Html.EditorFor(model => model.ParadaCopo.HoraParada, new { htmlAttributes = new { type = "time", @class = "form-control" } })</td><td>@Html.EditorFor(model => model.ParadaCopo.HoraRetorno, new { htmlAttributes = new { type = "time", @class = "form-control" } })</td><td><select class="form-control" id="Motivo" name="Motivo"><option value="Motivo">Selecione o Motivo</option><option value="Manutenção">Manutenção</option><option value="Troca de Molde">Troca de Molde</option><option value="Descanso">Descanso</option><option value="Outros (Obs)">Outros (Obs)</option></select>@Html.ValidationMessageFor(model => model.ParadaCopo.Motivo, "", new { @class = "text-danger" })</td><td>@Html.EditorFor(model => model.ParadaCopo.Observacoes, new { htmlAttributes = new { @class = "form-control" } })</td><td><a class="btn btn-default btn-sm" id="remover"><span class="glyphicon glyphicon-remove"></span></a></td></tr>')
		});
		$("#pausa").on('click ', '#remover', function () {
			$("#linhaPausa").remove();
		});

		$("#MateriaPrima").change(function (event) {
			// habilita o campo
			if ($(this).val() == "Refugo") {
				$("#MPLote").prop("disabled", true);
				$("#MPLote").val("Refugo");
			}
			else {
				$("#MPLote").prop("disabled", false);
				$("#MPLote").val("");
			}
		});

		if ($("#ExpectativaId").text != "Copo") {
			$($(this).text).prop("disabled", true);
		}

	});
</script>
<ol class="breadcrumb">
	<li><a href="http://localhost:49630/Home/Index">Home</a></li>
	<li><a href="http://localhost:49630/OrdemProducaoCopos/Index">Ordens de Produção de Copos</a></li>
	<li class="active">Nova</li>
</ol>
<h2>Nova Ordem de Produção</h2>
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	
	<div class="form-horizontal">
		<h4>COPO</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="row">
            <div class="col-lg-4">
                <label>Matéria-Prima</label>
                <select class="form-control" id="MateriaPrima" name="MateriaPrima">
                    <option value="">Selecione a Matéria Prima</option>
                    <option value="Virgem">Virgem</option>
                    <option value="Refugo">Refugo</option>
                </select>
                <p style="color:red;">@ViewBag.MateriaPrima</p>

            </div>
            <div class="col-lg-4">
                <label>Produto</label>
                @Html.DropDownList("ExpectativaId", null, "Selecione o Produto", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpectativaId, "", new { @class = "text-danger" })
                <p style="color:red;">@ViewBag.Expectativa</p>
            </div>
			<div class="col-lg-4">
				@Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
				@Html.EditorFor(model => model.Data, new { htmlAttributes = new { Type = "date", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-6">
				<label>Produção Início</label>
				@Html.EditorFor(model => model.ProdIncio, new { htmlAttributes = new { Type = "Time", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ProdIncio, "", new { Type = "Time", @class = "text-danger" })
			</div>
			<div class="col-md-6">
				<label>Produção Fim</label>
				@Html.EditorFor(model => model.ProdFim, new { htmlAttributes = new { Type = "Time", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ProdFim, "", new { Type = "Time", @class = "text-danger" })
			</div>
		</div>
		<br />

		<div class="row">
            <div class="col-lg-4">
                <label>Máquina</label>
                @Html.DropDownList("MaquinaId", new SelectList(ViewBag.MaquinaId, "MaquinaId", "NomeMaquina"), "Selecione a Maquina", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaquinaId, "", new { @class = "text-danger" })
               
            </div>
			<div class="col-lg-4">
				<label>Matéria-Prima (Lote)</label>
				@Html.EditorFor(model => model.MPLote, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MPLote, "", new { @class = "text-danger" })
			</div>
			<div class="col-lg-4">
				<label>Consumo Matéria-Prima</label>
				@Html.EditorFor(model => model.MPConsumo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MPConsumo, "", new { @class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-lg-4">
				<label>Temperatura Água</label>
				@Html.EditorFor(model => model.TempAgua, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TempAgua, "", new { @class = "text-danger" })
			</div>
			<div class="col-lg-4">
				<label>Nível Óleo</label>
				@Html.EditorFor(model => model.NivelOleo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NivelOleo, "", new { @class = "text-danger" })
			</div>
			<div class="col-lg-4">
				<label>Refugo (Kg)</label>
				@Html.EditorFor(model => model.RefugoKg, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.RefugoKg, "", new { @class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-lg-6">
				<label>Contador Inicial</label>
				@Html.EditorFor(model => model.ContadorInicial, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ContadorInicial, "", new { @class = "text-danger" })
			</div>
			<div class="col-lg-6">
				<label>Contador Fim</label>
				@Html.EditorFor(model => model.ContadorFinal, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ContadorFinal, "", new { @class = "text-danger" })
			</div>
		</div>
		<br /><br />

		<div class="row">
			<h4>Cores</h4>
			<hr />
			<table class="table table-bordered table-responsive">
				<thead>
					<tr>
						<th>Cor</th>
						<th>Unidades Produzidas</th>
						<th>Lote Master</th>
						<th></th>
					</tr>
				</thead>
				<tbody id="esp">
					<tr id="linha">
						<td>@Html.DropDownList("CorId", null, htmlAttributes: new { @class = "form-control" })</td>
						<td>@Html.EditorFor(model => model.EspecificacaoCopo.UniProd, new { htmlAttributes = new { @class = "form-control" } })</td>
						<td>@Html.EditorFor(model => model.EspecificacaoCopo.LoteMaster, new { htmlAttributes = new { @class = "form-control" } })</td>
						<td></td>
					</tr>
				</tbody>
			</table>
			<a class="btn btn-default btn-sm" id="add"><span class="glyphicon glyphicon-plus"></span></a>
		</div>
		<br /><br />
		<div class="row">
			<h4>Pausa</h4>
			<hr />
			<table class="table table-bordered">
				<thead>
					<tr>
						<th>Hora Inicio</th>
						<th>Hora Retorno</th>
						<th>Motivo</th>
						<th>Observações</th>
						<th></th>
					</tr>
				</thead>
				<tbody id="pausa">
					<tr id="linha2">
						
					</tr>
				</tbody>
			</table>
			<a class="btn btn-default btn-sm" id="adc"><span class="glyphicon glyphicon-plus"></span></a>
		</div>
		<br /><br />
		<div class="row">
			<h4>Controle de Qualidade</h4>
			<hr />
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Hora</th>
                        <th>Ciclo</th>
                        <th>Peso da Peça</th>
                        <th>Peso da Peça</th>
                        <th>Inspeção</th>
                        <th>Assinatura</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="7:00 - 8:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="8:00 - 9:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="9:00 - 10:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="10:00 - 11:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="11:00 - 12:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="12:00 - 13:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="13:00 - 14:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="14:00 - 15:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="15:00 - 16:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <td><input type="text" name="Hora" class="form-control" value="16:00 - 17:00" readonly="readonly" /></td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Ciclo, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.PesoDaPeca2, new { htmlAttributes = new { @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.EditorFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.EditorFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
                        <td>@Html.DropDownList("Assinatura", null, htmlAttributes: new { @class = "form-control" })</td>
                    </tr>
                </tbody>
            </table>
		</div>
		<br /><br />
		<div class="row col-lg-12 col-sm-12">
			@if (@Session["Hierarquia"].ToString() == "Acesso Supervisor")
			{
				<div class="checkbox" id="check">
					@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "checkbox" } })
					<p>Validação do Supervisor</p>
				</div>

			}
			else
			{
				<label>Validação do Supervisor</label>
				@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "checkbox", disabled = "disabled" } })

			}
			@Html.HiddenFor(model => model.Status)
		</div>
		<br /><br />
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Salvar" class="btn btn-default" />
				<a class="btn btn-default" href="/OrdemProducaoCopos/Index">Voltar</a>
			</div>
		</div>
	</div>
}
